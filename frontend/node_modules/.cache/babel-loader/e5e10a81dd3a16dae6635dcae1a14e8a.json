{"ast":null,"code":"import { HomeActionTypes } from './types'; // Type-safe initialState!\n\nexport const initialState = {\n  data: [],\n  errors: undefined,\n  loading: false\n}; // Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HomeActionTypes.FETCH_REQUEST:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case HomeActionTypes.FETCH_SUCCESS:\n      {\n        return { ...state,\n          loading: false,\n          data: action.payload\n        };\n      }\n\n    case HomeActionTypes.FETCH_ERROR:\n      {\n        return { ...state,\n          loading: false,\n          errors: action.payload\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}; // Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\n\n\nexport { reducer as homeReducer };","map":{"version":3,"sources":["/app/src/store/home/reducer.ts"],"names":["HomeActionTypes","initialState","data","errors","undefined","loading","reducer","state","action","type","FETCH_REQUEST","FETCH_SUCCESS","payload","FETCH_ERROR","homeReducer"],"mappings":"AACA,SAAoBA,eAApB,QAA2C,SAA3C,C,CAEA;;AACA,OAAO,MAAMC,YAAuB,GAAG;AACrCC,EAAAA,IAAI,EAAE,EAD+B;AAErCC,EAAAA,MAAM,EAAEC,SAF6B;AAGrCC,EAAAA,OAAO,EAAE;AAH4B,CAAhC,C,CAMP;AACA;;AACA,MAAMC,OAA2B,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACpE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,eAAe,CAACU,aAArB;AAAoC;AAClC,eAAO,EAAE,GAAGH,KAAL;AAAYF,UAAAA,OAAO,EAAE;AAArB,SAAP;AACD;;AACD,SAAKL,eAAe,CAACW,aAArB;AAAoC;AAClC,eAAO,EAAE,GAAGJ,KAAL;AAAYF,UAAAA,OAAO,EAAE,KAArB;AAA4BH,UAAAA,IAAI,EAAEM,MAAM,CAACI;AAAzC,SAAP;AACD;;AACD,SAAKZ,eAAe,CAACa,WAArB;AAAkC;AAChC,eAAO,EAAE,GAAGN,KAAL;AAAYF,UAAAA,OAAO,EAAE,KAArB;AAA4BF,UAAAA,MAAM,EAAEK,MAAM,CAACI;AAA3C,SAAP;AACD;;AACD;AAAS;AACP,eAAOL,KAAP;AACD;AAZH;AAcD,CAfD,C,CAiBA;AACA;;;AACA,SAASD,OAAO,IAAIQ,WAApB","sourcesContent":["import { Reducer } from 'redux'\nimport { HomeState, HomeActionTypes } from './types'\n\n// Type-safe initialState!\nexport const initialState: HomeState = {\n  data: [],\n  errors: undefined,\n  loading: false\n}\n\n// Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\nconst reducer: Reducer<HomeState> = (state = initialState, action) => {\n  switch (action.type) {\n    case HomeActionTypes.FETCH_REQUEST: {\n      return { ...state, loading: true }\n    }\n    case HomeActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, data: action.payload }\n    }\n    case HomeActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\n// Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\nexport { reducer as homeReducer }\n"]},"metadata":{},"sourceType":"module"}